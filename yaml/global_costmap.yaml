# http://wiki.ros.org/costmap_2d#costmap_2d.2BAC8-layered.Parameters
global_costmap:
    plugins: # warstwy mapy 
        - {name: static_map,       type: "costmap_2d::StaticLayer"} #mapa statyczna 
        - {name: inflation,        type: "costmap_2d::InflationLayer"} #mapa powiekszona o rozmiar robota (robot w nawigacji jest punktem materialnym)
        
    global_frame: map  # globalny uklad odniesienia w ktorym dziala mapa
    robot_base_frame: base_footprint # nazwa frame z poczatkiem ukladu robota
    footprint: [[-0.45, -0.4], [0.45, -0.4], [0.45, 0.4], [-0.45, 0.4]] # prostokatne wymiary robota  
    footprint_padding: 0.01

    transform_tolerance: 1.0 # maksymalne opoznienie tfa
    static_map: true # mapa statyczna

    update_frequency: 4.0  # czestotliwosc odswiezania mapy
    publish_frequency: 4.0 # publikowanie mapy zeby rviz mogl widziec   
    resolution: 0.04       # rozdzielczosc mapy
    rolling_window: false # dla statycznej musi byc false
    # keeps the robot in the center of the costmap as it moves 
    # throughout the world, dropping obstacle information from the map as the robot moves too far from a given area. 
    always_send_full_costmap: true # wysylaj pelna mape            
    static_map:                     # http://wiki.ros.org/costmap_2d/hydro/staticmap
        unknown_cost_value: -1      # wartosc dla nienznanych pixeli
        lethal_cost_threshold: 100  # prog kolizji
        map_topic: map             # stad bierzemy mape 
    inflation:  # http://wiki.ros.org/costmap_2d/hydro/inflation
        inflation_radius: 0.3   # promien na ktorym uzywana jest funkcja inflacji

        cost_scaling_factor: 1  # szybkosc postepowania wykladnika
                                # exp(-1.0 * cost_scaling_factor * (distance_from_obstacle - inscribed_radius)) * (costmap_2d::INSCRIBED_INFLATED_OBSTACLE - 1), 
